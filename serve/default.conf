# server {
#     listen 80;
#     listen [::]:80;
# 
#     # redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
#     return 301 https://$host$request_uri;
# }

server {
    # listen 443 means the Nginx server listens on the 443 port.
    listen 443 ssl;
    listen [::]:443 ssl;
    listen 80;
    listen [::]:80;
    server_name  hjtunwin.uk www.hjtunwin.uk;
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/nginx/certs/hjtunwin.uk.crt;
    ssl_certificate_key /etc/nginx/certs/hjtunwin.uk.key;

    ssl_verify_client on;
    ssl_client_certificate /etc/nginx/certs/cloudflare.crt;

    access_log  /var/log/nginx/host.access.log  main;
    error_log   /var/log/nginx/nginx.error.log;

    # Docker nginx reverse proxy proxy_pass entry
     location / {
        return 301 /simple/;
    }
    location /simple {
        return 301 /simple/;
    }
    location /simple/ {
        proxy_pass http://simple:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 20d;
        proxy_buffering off;

        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

    location /complicated {
        return 301 /complicated/;
    }
    location /complicated/ {
        proxy_pass http://complicated:5000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 20d;
        proxy_buffering off;

        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

